// Add to Person a createGreetingsForFriends method which will return an array of strings - each string in the array is a greeting generated by the createGreeting method. For example:
//
// > var alfie = new Person('Alfie');
// > var anushka = new Person('Anushka');
// > var henrique = new Person('Henrique');
// > alfie.addFriend(anushka);
// > alfie.addFriend(henrique);
// > alfie.createGreetingsForFriends();
// ["Yo Anushka! from Alfie.", "Yo Henrique! from Alfie."]
// Do this without using a loop but by using map instead.
class Person {
  constructor(name, friends){
    this.name = name;
    this.friends = [];
  }
  add_friend(friend){
    this.friends.push(friend);
    return this.friends;
  }
  create_greeting(other){
    return 'Yo ' + other.name + '! from ' + this.name + '.';
  }
  greet(other){
    console.log(this.create_greeting(other));
    return this.create_greeting(other)
  }
  lazy_greet(other, name){
    setTimeout(function () {
        console.log('Yo ' + other.name + '! from ' + name.name + '.');
    }, 1000);
  }
  create_greetings_for_friends(other, name){
    this.friends.map(function(other){
    var greetings = []
    var greet = 'Yo ' + other.name + '! from ' + name.name + '.';
    greetings.push(greet);
    console.log(greetings)
    return greetings;
    });
  }
}

var alfie = new Person('Alfie');
var anushka = new Person('Anushka');
var henrique = new Person('Henrique');
alfie.add_friend(anushka);
alfie.add_friend(henrique);
var other = alfie.friends;
alfie.create_greetings_for_friends(other, alfie);
